{
	"rules": {
		"curly": true,                                                                      // Enforces braces for if/for/do/while statements.
		"class-name": true,                                                                 // Enforces PascalCased class and interface names.
		"semicolon": true,                                                                  // Enforces consistent semicolon usage at the end of every statement.
		"triple-equals": true,                                                              // Requires === and !== in place of == and !=.
		"array-type": [true, "array"],                                                      // Requires using either ‘T[]’ or ‘Array' for arrays.
		"arrow-return-shorthand": false,                                                    // Suggests to convert () => { return x; } to () => x.
		"await-promise": false,                                                             // Warns for an awaited value that is not a Promise.
		"adjacent-overload-signatures": false,                                              // Enforces function overloads to be consecutive.
		"arrow-parens": false,                                                              // Requires parentheses around the parameters of arrow function definitions.
		"ban": false,                                                                       // Bans the use of specific functions or global methods.
		"forin": true,                                                                      // Requires a for ... in statement to be filtered with an if statement.
		"import-spacing": false,                                                            // Ensures proper spacing between import statement keywords
		"indent": [true, "tabs"],                                                           // Enforces indentation with tabs or spaces.
		"no-console": [true, "debug", "error", "info", "log", "time", "timeEnd", "trace"],  // Bans the use of specified console methods.
		"no-construct": true,                                                               // Disallows access to the constructors of String, Number, and Boolean. Disallows constructor use such as new Number(foo) but does not disallow Number(foo).
		"no-debugger": true,                                                                // Disallows debugger statements.
		"no-default-export": true,                                                          // Disallows default exports in ES6-style modules. Use named exports instead.
		"no-duplicate-super": true,                                                         // Warns if ‘super()’ appears twice in a constructor.
		"no-duplicate-variable": [true, "check-parameters"],                                // Disallows duplicate variable declarations in the same block scope.
		"no-empty": false,                                                                  // Disallows empty blocks. Blocks with a comment inside are not considered empty.
		"no-empty-interface": false,                                                        // Forbids empty interfaces.
		"no-invalid-this": true,                                                            // Disallows using the this keyword outside of classes.
		"no-unused-expression": true,                                                       // Disallows unused expression statements.
		"no-unused-variable": true                                                          // Disallows unused imports, variables, functions and private class members. Similar to tsc’s –noUnusedParameters and –noUnusedLocals options, but does not interrupt code compilation.
	},
	"defaultSeverity": "warning"                                // error || warning
}