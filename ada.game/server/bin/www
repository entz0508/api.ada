#!/usr/bin/env node

/**
 * Module dependencies.
 */

const debug 		    = require('debug')('fashion:server');
const RPCServer         = require("jsonrpc-node").TCP.Server;
const CAppInitialize 	= require("../build/CAppInitialize");
const CTCPRoute         = require("../build/routes/CTCPRoute");

CAppInitialize.load()
    .then(() => {
	    /**
	     * Get port from options and store in Express.
	     */

	    const port = normalizePort(process.env.PORT || '9001');

	    /**
	     * Create TCP(RPC) server.
	     */

	    const socket = new RPCServer();

	    socket.register("packet", CTCPRoute.packetHandling);

	    socket.listen(port, "127.0.0.1");

	    debug("##############################################################################");
	    debug("##############################################################################");
	    debug("#####                 SERVER BUILD VERSION : 2018-08-13 ~                #####");
	    debug("##############################################################################");
	    debug("##############################################################################");
	    debug('Listening on socket port ' + port);

	    /**
	     * Normalize a port into a number, string, or false.
	     */

	    function normalizePort(val) {
		    const port = parseInt(val, 10);

		    if (isNaN(port)) {
			    // named pipe
			    return val;
		    }

		    if (port >= 0) {
			    // port number
			    return port;
		    }

		    return false;
	    }
    });